apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: pims-api-template
labels:
  template: pims-api-template
objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    annotations:
      app.openshift.io/connects-to: pims-database
    name: pims-api
    namespace: ${LICENSE_PLATE}-${ENVIRONMENT}
    labels:
      app: pims
      app.kubernetes.io/part-of: pims
      env: ${ENVIRONMENT}
      name: pims-api
      role: api
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - pims-api
          from:
            kind: ImageStreamTag
            namespace: ${LICENSE_PLATE}-tools
            name: 'pims-api:${IMAGE_TAG}'
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: pims
      env: ${ENVIRONMENT}
      instance: ''
      role: api
    template:
      metadata:
        name: pims-api
        creationTimestamp: null
        annotations:
          # 1. Vault injector configuration goes here, inside the template.
          vault.hashicorp.com/agent-inject: 'true'
          vault.hashicorp.com/agent-inject-token: 'false' # set to 'true' if you are going to connect and query vault from your application
          vault.hashicorp.com/agent-pre-populate-only: 'true' # this makes sure the secret vault will only change during pod restart
          vault.hashicorp.com/auth-path: 'auth/k8s-silver'  # This was tricky.  Be sure to use k8s-silver, k8s-gold, or k8s-golddr
          vault.hashicorp.com/namespace: 'platform-services'
          vault.hashicorp.com/role: 'ec1236-nonprod'  # licenseplate-nonprod or licenseplate-prod are your options

          # Configure how to retrieve and populate the secrets from Vault:
          # - The name of the secret is any unique string after vault.hashicorp.com/agent-inject-secret-<name>
          # - The value is the path in Vault where the secret is located.
          vault.hashicorp.com/agent-inject-secret-helloWorld3: 'ec1236-nonprod/helloWorld3'
          # - The template Vault Agent should use for rendering a secret:
          vault.hashicorp.com/agent-inject-template-helloWorld3: |
            {{- with secret "ec1236-nonprod/helloWorld3" }}
            export MANISH_SECRET="{{ .Data.data.manish }}"
            {{- end }}
        labels:
          app: pims
          env: ${ENVIRONMENT}
          instance: ''
          name: pims-api
          role: api
      spec:
        serviceAccountName: 'ec1236-vault'
        containers:
          - resources:
              limits:
                cpu: 150m
                memory: 1Gi
              requests:
                cpu: 50m
                memory: 100Mi
            readinessProbe:
              httpGet:
                path: /health/ready
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 30
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            name: pims-api
            command:
              ['bash', '-c']
            args:
              ['source /vault/secrets/helloworld3']
            livenessProbe:
              httpGet:
                path: /health/live
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 30
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            env:
              - name: ASPNETCORE_ENVIRONMENT
                value: ${ASPNETCORE_ENVIRONMENT}
              - name: ASPNETCORE_URLS
                value: 'http://*:8080'
              - name: HealthChecks__LivePath
                value: /health/live
              - name: HealthChecks__ReadyPath
                value: /health/ready
              - name: ConnectionStrings__PIMS
                valueFrom:
                  configMapKeyRef:
                    name: pims-api-database
                    key: CONNECTION_STRINGS_PIMS
              - name: DB_USER
                valueFrom:
                  secretKeyRef:
                    name: pims-database
                    key: DB_USER
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: pims-database
                    key: DB_PASSWORD
              - name: Keycloak__Audience
                valueFrom:
                  configMapKeyRef:
                    name: pims-api-sso
                    key: KEYCLOAK_AUDIENCE
              - name: Keycloak__Authority
                valueFrom:
                  configMapKeyRef:
                    name: pims-api-sso
                    key: KEYCLOAK_AUTHORITY
              - name: Keycloak__Admin__Authority
                valueFrom:
                  configMapKeyRef:
                    name: pims-api-sso
                    key: KEYCLOAK_ADMIN_AUTHORITY
              - name: Keycloak__Secret
                valueFrom:
                  secretKeyRef:
                    name: pims-api-sso
                    key: KEYCLOAK_SECRET
              - name: Keycloak__ServiceAccount__Secret
                valueFrom:
                  secretKeyRef:
                    name: pims-api-sso
                    key: KEYCLOAK_SERVICE_ACCOUNT_SECRET
              - name: Ches__Username
                valueFrom:
                  secretKeyRef:
                    name: pims-api-ches
                    key: CHES_USERNAME
              - name: Ches__Password
                valueFrom:
                  secretKeyRef:
                    name: pims-api-ches
                    key: CHES_PASSWORD
              - name: Geocoder__Key
                valueFrom:
                  secretKeyRef:
                    name: pims-api-geocoder
                    key: GEOCODER_KEY
              - name: ElasticConfiguration__Password
                valueFrom:
                  secretKeyRef:
                    name: pims-api-elasticsearch
                    key: ELASTIC_PASSWORD
              - name: Ches__EmailEnabled
                value: 'true'
              - name: Ches__EmailAuthorized
                value: ${EMAIL_AUTHORIZED}
              - name: Elastic__Uri
                value: 'https://pims-elastic.apps.silver.devops.gov.bc.ca/'
              - name: Elastic__Username
                value: elastic
              - name: Elastic__Password
                valueFrom:
                  secretKeyRef:
                    name: pims-api-elasticsearch
                    key: ELASTIC_PASSWORD
              - name: Notifications__SendAllNow
                value: 'false'
              - name: Keycloak__FrontendClientId
                value: pims-frontend-4391
              - name: Ltsa__IntegratorUsername
                valueFrom:
                  secretKeyRef:
                    name: pims-api-ltsa
                    key: INTEGRATOR_USERNAME
              - name: Ltsa__IntegratorPassword
                valueFrom:
                  secretKeyRef:
                    name: pims-api-ltsa
                    key: INTEGRATOR_PASSWORD
              - name: Ltsa__UserName
                valueFrom:
                  secretKeyRef:
                    name: pims-api-ltsa
                    key: USERNAME
              - name: Ltsa__UserPassword
                valueFrom:
                  secretKeyRef:
                    name: pims-api-ltsa
                    key: USER_PASSWORD
            ports:
              - containerPort: 8080
                protocol: TCP
            imagePullPolicy: IfNotPresent
            terminationMessagePolicy: File
            image: >-
              image-registry.openshift-image-registry.svc:5000/${LICENSE_PLATE}-tools/pims-api@sha256:1b6f8a06b59820bf7a738fd6396fa05f42b9bc44a2586a80761e166d488d242b
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler



parameters:
  - description: Environment
    displayName: Environment
    name: ENVIRONMENT
    required: true
    value: dev
  - description: License Plate
    displayName: License Plate
    name: LICENSE_PLATE
    required: true
    value: "354028"
  - description: ASP.NET Core Environment
    displayName: ASP.NET Core Environment
    name: ASPNETCORE_ENVIRONMENT
    required: true
    value: Development
  - description: Ches__EmailAuthorized
    displayName: Ches__EmailAuthorized
    name: EMAIL_AUTHORIZED
    required: true
  - description: ImageTag
    displayName: ImageTag
    name: IMAGE_TAG
    required: true
