name: build-deploy-app

on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
  workflow_dispatch:
    
jobs:
    pims-app-Build-Tag-Push:
      environment: dev
      runs-on: ubuntu-latest
      steps:
        # check out the repo
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
          
        # login to the Openshift Cluster
        - name: Login to Openshift
          uses: redhat-actions/oc-login@v1
          with:
            openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
            openshift_token: ${{ secrets.OPENSHIFT_SA_TOOLS_TOKEN }}
            namespace: ${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}
            
        # Login to BC Gov Docker Image Repository
        - name: Login to Openshift Docker
          run : |
            docker login ${{ secrets.PUBLIC_IMAGE_REPOSITORY }} -u ${{ secrets.OPENSHIFT_SA_NAME }} -p ${{ secrets.OPENSHIFT_SA_TOOLS_TOKEN }}

        # Build the app Image
        - name: Build app Image
          run: |
            docker-compose -f docker-compose.prod.yml build frontend

        - name: Tag app Image
          run: |
            docker tag pims_frontend ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/pims-app:dev

        # Push the app Image
        - name: Push app Image
          run: |
            docker push ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/pims-app:dev
          
    Deploy:
      name: Deploy to OpenShift
      runs-on: ubuntu-latest
      needs: [ pims-app-Build-Tag-Push ]
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3 
      
        - name: Login to OpenShift
          uses: redhat-actions/oc-login@v1
          with:
            openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
            openshift_token: ${{ secrets.OPENSHIFT_SA_DEV_TOKEN }}
            namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}

        - name: Deploy DeploymentConfig
          env:
            APPLICATION_NAME: "pims-app"
            DEPLOYMENT_CONFIG: "app-dc-template.yaml"
            IMAGE_REPOSITORY: ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}
          run: |
            oc apply -f /home/runner/work/PIMS/PIMS/openshift/templates/app-dc-template.yaml


    Health-Check:
      name: Check Deployment Health
      runs-on: ubuntu-latest
      needs: [ Deploy ]
      steps:
        - name: Login to OpenShift
          uses: redhat-actions/oc-login@v1
          env:
            OPENSHIFT_USER: github-actions
            OPENSHIFT_PROJECT: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}
          with:
            openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
            openshift_token: ${{ secrets.OPENSHIFT_SA_DEV_TOKEN }}
            namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}

        - name: Check Deployment Status
          run: |
            oc rollout status -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} dc/pims-app --watch

    Clean-Up:
      name: Clean Up
      runs-on: ubuntu-latest
      needs: [ Health-Check ]
      steps:
        - name: Login to OpenShift
          uses: redhat-actions/oc-login@v1
          env:
            OPENSHIFT_USER: github-actions
            OPENSHIFT_PROJECT: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}
          with:
            openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
            openshift_token: ${{ secrets.OPENSHIFT_SA_DEV_TOKEN }}
            namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}

        - name: Remove previous objects
          run: |
            oc delete pod -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} --field-selector status.phase=Succeeded

        - name: Remove previous replication controllers
          run: |
            oc delete rc -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} --field-selector status.replicas=0
             
